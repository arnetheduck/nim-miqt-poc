#pragma once
#ifndef MIQT_QT_RESTRICTED_EXTRAS_QSCINTILLA6_GEN_QSCISCINTILLA_H
#define MIQT_QT_RESTRICTED_EXTRAS_QSCINTILLA6_GEN_QSCISCINTILLA_H

#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>

#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#include "../../libmiqt/libmiqt.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifdef __cplusplus
class QAbstractScrollArea;
class QActionEvent;
class QChildEvent;
class QCloseEvent;
class QColor;
class QContextMenuEvent;
class QDragEnterEvent;
class QDragLeaveEvent;
class QDragMoveEvent;
class QDropEvent;
class QEnterEvent;
class QEvent;
class QFocusEvent;
class QFont;
class QFrame;
class QHideEvent;
class QIODevice;
class QImage;
class QInputMethodEvent;
class QKeyEvent;
class QMenu;
class QMetaMethod;
class QMetaObject;
class QMimeData;
class QMouseEvent;
class QMoveEvent;
class QObject;
class QPaintDevice;
class QPaintEngine;
class QPaintEvent;
class QPainter;
class QPixmap;
class QPoint;
class QResizeEvent;
class QShowEvent;
class QSize;
class QStyleOptionFrame;
class QTabletEvent;
class QTimerEvent;
class QVariant;
class QWheelEvent;
class QWidget;
class QsciCommandSet;
class QsciDocument;
class QsciLexer;
class QsciScintilla;
class QsciScintillaBase;
class QsciStyle;
class QsciStyledText;
#else
typedef struct QAbstractScrollArea QAbstractScrollArea;
typedef struct QActionEvent QActionEvent;
typedef struct QChildEvent QChildEvent;
typedef struct QCloseEvent QCloseEvent;
typedef struct QColor QColor;
typedef struct QContextMenuEvent QContextMenuEvent;
typedef struct QDragEnterEvent QDragEnterEvent;
typedef struct QDragLeaveEvent QDragLeaveEvent;
typedef struct QDragMoveEvent QDragMoveEvent;
typedef struct QDropEvent QDropEvent;
typedef struct QEnterEvent QEnterEvent;
typedef struct QEvent QEvent;
typedef struct QFocusEvent QFocusEvent;
typedef struct QFont QFont;
typedef struct QFrame QFrame;
typedef struct QHideEvent QHideEvent;
typedef struct QIODevice QIODevice;
typedef struct QImage QImage;
typedef struct QInputMethodEvent QInputMethodEvent;
typedef struct QKeyEvent QKeyEvent;
typedef struct QMenu QMenu;
typedef struct QMetaMethod QMetaMethod;
typedef struct QMetaObject QMetaObject;
typedef struct QMimeData QMimeData;
typedef struct QMouseEvent QMouseEvent;
typedef struct QMoveEvent QMoveEvent;
typedef struct QObject QObject;
typedef struct QPaintDevice QPaintDevice;
typedef struct QPaintEngine QPaintEngine;
typedef struct QPaintEvent QPaintEvent;
typedef struct QPainter QPainter;
typedef struct QPixmap QPixmap;
typedef struct QPoint QPoint;
typedef struct QResizeEvent QResizeEvent;
typedef struct QShowEvent QShowEvent;
typedef struct QSize QSize;
typedef struct QStyleOptionFrame QStyleOptionFrame;
typedef struct QTabletEvent QTabletEvent;
typedef struct QTimerEvent QTimerEvent;
typedef struct QVariant QVariant;
typedef struct QWheelEvent QWheelEvent;
typedef struct QWidget QWidget;
typedef struct QsciCommandSet QsciCommandSet;
typedef struct QsciDocument QsciDocument;
typedef struct QsciLexer QsciLexer;
typedef struct QsciScintilla QsciScintilla;
typedef struct QsciScintillaBase QsciScintillaBase;
typedef struct QsciStyle QsciStyle;
typedef struct QsciStyledText QsciStyledText;
#endif

struct QsciScintilla_VTable {
	void (*destructor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	QMetaObject* (*metaObject)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void* (*metacast)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, const char* param1);
	int (*metacall)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int param1, int param2, void** param3);
	struct miqt_array /* of struct miqt_string */  (*apiContext)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int pos, int* context_start, int* last_word_start);
	bool (*findFirst)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string expr, bool re, bool cs, bool wo, bool wrap, bool forward, int line, int index, bool show, bool posix, bool cxx11);
	bool (*findFirstInSelection)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string expr, bool re, bool cs, bool wo, bool forward, bool show, bool posix, bool cxx11);
	bool (*findNext)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*recolor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int start, int end);
	void (*replace)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string replaceStr);
	void (*append)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string text);
	void (*autoCompleteFromAll)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*autoCompleteFromAPIs)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*autoCompleteFromDocument)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*callTip)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*clear)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*copy)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*cut)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*ensureCursorVisible)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*ensureLineVisible)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line);
	void (*foldAll)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool children);
	void (*foldLine)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line);
	void (*indent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line);
	void (*insert)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string text);
	void (*insertAt)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string text, int line, int index);
	void (*moveToMatchingBrace)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*paste)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*redo)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*removeSelectedText)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*replaceSelectedText)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string text);
	void (*resetSelectionBackgroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*resetSelectionForegroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*selectAll)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool select);
	void (*selectToMatchingBrace)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*setAutoCompletionCaseSensitivity)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool cs);
	void (*setAutoCompletionReplaceWord)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool replace);
	void (*setAutoCompletionShowSingle)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool single);
	void (*setAutoCompletionSource)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int source);
	void (*setAutoCompletionThreshold)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int thresh);
	void (*setAutoCompletionUseSingle)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int single);
	void (*setAutoIndent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool autoindent);
	void (*setBraceMatching)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int bm);
	void (*setBackspaceUnindents)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool unindent);
	void (*setCaretForegroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setCaretLineBackgroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setCaretLineFrameWidth)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int width);
	void (*setCaretLineVisible)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool enable);
	void (*setCaretWidth)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int width);
	void (*setColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* c);
	void (*setCursorPosition)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line, int index);
	void (*setEolMode)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int mode);
	void (*setEolVisibility)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool visible);
	void (*setFolding)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int fold, int margin);
	void (*setIndentation)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line, int indentation);
	void (*setIndentationGuides)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool enable);
	void (*setIndentationGuidesBackgroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setIndentationGuidesForegroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setIndentationsUseTabs)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool tabs);
	void (*setIndentationWidth)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int width);
	void (*setLexer)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QsciLexer* lexer);
	void (*setMarginsBackgroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setMarginsFont)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QFont* f);
	void (*setMarginsForegroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setMarginLineNumbers)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int margin, bool lnrs);
	void (*setMarginMarkerMask)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int margin, int mask);
	void (*setMarginSensitivity)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int margin, bool sens);
	void (*setMarginWidth)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int margin, int width);
	void (*setMarginWidth2)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int margin, struct miqt_string s);
	void (*setModified)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool m);
	void (*setPaper)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* c);
	void (*setReadOnly)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool ro);
	void (*setSelection)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo);
	void (*setSelectionBackgroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setSelectionForegroundColor)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QColor* col);
	void (*setTabIndents)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool indent);
	void (*setTabWidth)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int width);
	void (*setText)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string text);
	void (*setUtf8)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool cp);
	void (*setWhitespaceVisibility)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int mode);
	void (*setWrapMode)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int mode);
	void (*undo)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*unindent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int line);
	void (*zoomIn)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int range);
	void (*zoomIn2)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*zoomOut)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int range);
	void (*zoomOut2)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self);
	void (*zoomTo)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int size);
	bool (*event)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEvent* e);
	void (*changeEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEvent* e);
	void (*contextMenuEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QContextMenuEvent* e);
	void (*wheelEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QWheelEvent* e);
	bool (*canInsertFromMimeData)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, QMimeData* source);
	struct miqt_string (*fromMimeData)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, QMimeData* source, bool* rectangular);
	QMimeData* (*toMimeData)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, struct miqt_string text, bool rectangular);
	void (*dragEnterEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QDragEnterEvent* e);
	void (*dragLeaveEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QDragLeaveEvent* e);
	void (*dragMoveEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QDragMoveEvent* e);
	void (*dropEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QDropEvent* e);
	void (*focusInEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QFocusEvent* e);
	void (*focusOutEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QFocusEvent* e);
	bool (*focusNextPrevChild)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool next);
	void (*keyPressEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QKeyEvent* e);
	void (*inputMethodEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QInputMethodEvent* event);
	QVariant* (*inputMethodQuery)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, int query);
	void (*mouseDoubleClickEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMouseEvent* e);
	void (*mouseMoveEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMouseEvent* e);
	void (*mousePressEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMouseEvent* e);
	void (*mouseReleaseEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMouseEvent* e);
	void (*paintEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QPaintEvent* e);
	void (*resizeEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QResizeEvent* e);
	void (*scrollContentsBy)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, int dx, int dy);
	QSize* (*minimumSizeHint)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	QSize* (*sizeHint)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void (*setupViewport)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QWidget* viewport);
	bool (*eventFilter)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QObject* param1, QEvent* param2);
	bool (*viewportEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEvent* param1);
	QSize* (*viewportSizeHint)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void (*initStyleOption)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, QStyleOptionFrame* option);
	int (*devType)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void (*setVisible)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, bool visible);
	int (*heightForWidth)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, int param1);
	bool (*hasHeightForWidth)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	QPaintEngine* (*paintEngine)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void (*keyReleaseEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QKeyEvent* event);
	void (*enterEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEnterEvent* event);
	void (*leaveEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEvent* event);
	void (*moveEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMoveEvent* event);
	void (*closeEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QCloseEvent* event);
	void (*tabletEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QTabletEvent* event);
	void (*actionEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QActionEvent* event);
	void (*showEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QShowEvent* event);
	void (*hideEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QHideEvent* event);
	bool (*nativeEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, struct miqt_string eventType, void* message, intptr_t* result);
	int (*metric)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, int param1);
	void (*initPainter)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, QPainter* painter);
	QPaintDevice* (*redirected)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self, QPoint* offset);
	QPainter* (*sharedPainter)(struct QsciScintilla_VTable* vtbl, const QsciScintilla* self);
	void (*timerEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QTimerEvent* event);
	void (*childEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QChildEvent* event);
	void (*customEvent)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QEvent* event);
	void (*connectNotify)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMetaMethod* signal);
	void (*disconnectNotify)(struct QsciScintilla_VTable* vtbl, QsciScintilla* self, QMetaMethod* signal);
};
QsciScintilla* QsciScintilla_new(struct QsciScintilla_VTable* vtbl, QWidget* parent);
QsciScintilla* QsciScintilla_new2(struct QsciScintilla_VTable* vtbl);
void QsciScintilla_virtbase(QsciScintilla* src, QsciScintillaBase** outptr_QsciScintillaBase);
QMetaObject* QsciScintilla_metaObject(const QsciScintilla* self);
void* QsciScintilla_metacast(QsciScintilla* self, const char* param1);
int QsciScintilla_metacall(QsciScintilla* self, int param1, int param2, void** param3);
struct miqt_string QsciScintilla_tr(const char* s);
struct miqt_array /* of struct miqt_string */  QsciScintilla_apiContext(QsciScintilla* self, int pos, int* context_start, int* last_word_start);
void QsciScintilla_annotate(QsciScintilla* self, int line, struct miqt_string text, int style);
void QsciScintilla_annotate2(QsciScintilla* self, int line, struct miqt_string text, QsciStyle* style);
void QsciScintilla_annotate3(QsciScintilla* self, int line, QsciStyledText* text);
struct miqt_string QsciScintilla_annotation(const QsciScintilla* self, int line);
int QsciScintilla_annotationDisplay(const QsciScintilla* self);
void QsciScintilla_clearAnnotations(QsciScintilla* self);
bool QsciScintilla_autoCompletionCaseSensitivity(const QsciScintilla* self);
bool QsciScintilla_autoCompletionFillupsEnabled(const QsciScintilla* self);
bool QsciScintilla_autoCompletionReplaceWord(const QsciScintilla* self);
bool QsciScintilla_autoCompletionShowSingle(const QsciScintilla* self);
int QsciScintilla_autoCompletionSource(const QsciScintilla* self);
int QsciScintilla_autoCompletionThreshold(const QsciScintilla* self);
int QsciScintilla_autoCompletionUseSingle(const QsciScintilla* self);
bool QsciScintilla_autoIndent(const QsciScintilla* self);
bool QsciScintilla_backspaceUnindents(const QsciScintilla* self);
void QsciScintilla_beginUndoAction(QsciScintilla* self);
int QsciScintilla_braceMatching(const QsciScintilla* self);
struct miqt_string QsciScintilla_bytes(const QsciScintilla* self, int start, int end);
int QsciScintilla_callTipsPosition(const QsciScintilla* self);
int QsciScintilla_callTipsStyle(const QsciScintilla* self);
int QsciScintilla_callTipsVisible(const QsciScintilla* self);
void QsciScintilla_cancelFind(QsciScintilla* self);
void QsciScintilla_cancelList(QsciScintilla* self);
bool QsciScintilla_caseSensitive(const QsciScintilla* self);
void QsciScintilla_clearFolds(QsciScintilla* self);
void QsciScintilla_clearIndicatorRange(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo, int indicatorNumber);
void QsciScintilla_clearRegisteredImages(QsciScintilla* self);
QColor* QsciScintilla_color(const QsciScintilla* self);
struct miqt_array /* of int */  QsciScintilla_contractedFolds(const QsciScintilla* self);
void QsciScintilla_convertEols(QsciScintilla* self, int mode);
QMenu* QsciScintilla_createStandardContextMenu(QsciScintilla* self);
QsciDocument* QsciScintilla_document(const QsciScintilla* self);
void QsciScintilla_endUndoAction(QsciScintilla* self);
QColor* QsciScintilla_edgeColor(const QsciScintilla* self);
int QsciScintilla_edgeColumn(const QsciScintilla* self);
int QsciScintilla_edgeMode(const QsciScintilla* self);
void QsciScintilla_setFont(QsciScintilla* self, QFont* f);
int QsciScintilla_eolMode(const QsciScintilla* self);
bool QsciScintilla_eolVisibility(const QsciScintilla* self);
int QsciScintilla_extraAscent(const QsciScintilla* self);
int QsciScintilla_extraDescent(const QsciScintilla* self);
void QsciScintilla_fillIndicatorRange(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo, int indicatorNumber);
bool QsciScintilla_findFirst(QsciScintilla* self, struct miqt_string expr, bool re, bool cs, bool wo, bool wrap, bool forward, int line, int index, bool show, bool posix, bool cxx11);
bool QsciScintilla_findFirstInSelection(QsciScintilla* self, struct miqt_string expr, bool re, bool cs, bool wo, bool forward, bool show, bool posix, bool cxx11);
bool QsciScintilla_findNext(QsciScintilla* self);
bool QsciScintilla_findMatchingBrace(QsciScintilla* self, long* brace, long* other, int mode);
int QsciScintilla_firstVisibleLine(const QsciScintilla* self);
int QsciScintilla_folding(const QsciScintilla* self);
void QsciScintilla_getCursorPosition(const QsciScintilla* self, int* line, int* index);
void QsciScintilla_getSelection(const QsciScintilla* self, int* lineFrom, int* indexFrom, int* lineTo, int* indexTo);
bool QsciScintilla_hasSelectedText(const QsciScintilla* self);
int QsciScintilla_indentation(const QsciScintilla* self, int line);
bool QsciScintilla_indentationGuides(const QsciScintilla* self);
bool QsciScintilla_indentationsUseTabs(const QsciScintilla* self);
int QsciScintilla_indentationWidth(const QsciScintilla* self);
int QsciScintilla_indicatorDefine(QsciScintilla* self, int style);
bool QsciScintilla_indicatorDrawUnder(const QsciScintilla* self, int indicatorNumber);
bool QsciScintilla_isCallTipActive(const QsciScintilla* self);
bool QsciScintilla_isListActive(const QsciScintilla* self);
bool QsciScintilla_isModified(const QsciScintilla* self);
bool QsciScintilla_isReadOnly(const QsciScintilla* self);
bool QsciScintilla_isRedoAvailable(const QsciScintilla* self);
bool QsciScintilla_isUndoAvailable(const QsciScintilla* self);
bool QsciScintilla_isUtf8(const QsciScintilla* self);
bool QsciScintilla_isWordCharacter(const QsciScintilla* self, char ch);
int QsciScintilla_lineAt(const QsciScintilla* self, QPoint* point);
void QsciScintilla_lineIndexFromPosition(const QsciScintilla* self, int position, int* line, int* index);
int QsciScintilla_lineLength(const QsciScintilla* self, int line);
int QsciScintilla_lines(const QsciScintilla* self);
int QsciScintilla_length(const QsciScintilla* self);
QsciLexer* QsciScintilla_lexer(const QsciScintilla* self);
QColor* QsciScintilla_marginBackgroundColor(const QsciScintilla* self, int margin);
bool QsciScintilla_marginLineNumbers(const QsciScintilla* self, int margin);
int QsciScintilla_marginMarkerMask(const QsciScintilla* self, int margin);
int QsciScintilla_marginOptions(const QsciScintilla* self);
bool QsciScintilla_marginSensitivity(const QsciScintilla* self, int margin);
int QsciScintilla_marginType(const QsciScintilla* self, int margin);
int QsciScintilla_marginWidth(const QsciScintilla* self, int margin);
int QsciScintilla_margins(const QsciScintilla* self);
int QsciScintilla_markerDefine(QsciScintilla* self, int sym);
int QsciScintilla_markerDefineWithCh(QsciScintilla* self, char ch);
int QsciScintilla_markerDefineWithPm(QsciScintilla* self, QPixmap* pm);
int QsciScintilla_markerDefineWithIm(QsciScintilla* self, QImage* im);
int QsciScintilla_markerAdd(QsciScintilla* self, int linenr, int markerNumber);
unsigned int QsciScintilla_markersAtLine(const QsciScintilla* self, int linenr);
void QsciScintilla_markerDelete(QsciScintilla* self, int linenr);
void QsciScintilla_markerDeleteAll(QsciScintilla* self);
void QsciScintilla_markerDeleteHandle(QsciScintilla* self, int mhandle);
int QsciScintilla_markerLine(const QsciScintilla* self, int mhandle);
int QsciScintilla_markerFindNext(const QsciScintilla* self, int linenr, unsigned int mask);
int QsciScintilla_markerFindPrevious(const QsciScintilla* self, int linenr, unsigned int mask);
bool QsciScintilla_overwriteMode(const QsciScintilla* self);
QColor* QsciScintilla_paper(const QsciScintilla* self);
int QsciScintilla_positionFromLineIndex(const QsciScintilla* self, int line, int index);
bool QsciScintilla_read(QsciScintilla* self, QIODevice* io);
void QsciScintilla_recolor(QsciScintilla* self, int start, int end);
void QsciScintilla_registerImage(QsciScintilla* self, int id, QPixmap* pm);
void QsciScintilla_registerImage2(QsciScintilla* self, int id, QImage* im);
void QsciScintilla_replace(QsciScintilla* self, struct miqt_string replaceStr);
void QsciScintilla_resetFoldMarginColors(QsciScintilla* self);
void QsciScintilla_resetHotspotBackgroundColor(QsciScintilla* self);
void QsciScintilla_resetHotspotForegroundColor(QsciScintilla* self);
int QsciScintilla_scrollWidth(const QsciScintilla* self);
bool QsciScintilla_scrollWidthTracking(const QsciScintilla* self);
void QsciScintilla_setFoldMarginColors(QsciScintilla* self, QColor* fore, QColor* back);
void QsciScintilla_setAnnotationDisplay(QsciScintilla* self, int display);
void QsciScintilla_setAutoCompletionFillupsEnabled(QsciScintilla* self, bool enabled);
void QsciScintilla_setAutoCompletionFillups(QsciScintilla* self, const char* fillups);
void QsciScintilla_setAutoCompletionWordSeparators(QsciScintilla* self, struct miqt_array /* of struct miqt_string */  separators);
void QsciScintilla_setCallTipsBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setCallTipsForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setCallTipsHighlightColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setCallTipsPosition(QsciScintilla* self, int position);
void QsciScintilla_setCallTipsStyle(QsciScintilla* self, int style);
void QsciScintilla_setCallTipsVisible(QsciScintilla* self, int nr);
void QsciScintilla_setContractedFolds(QsciScintilla* self, struct miqt_array /* of int */  folds);
void QsciScintilla_setDocument(QsciScintilla* self, QsciDocument* document);
void QsciScintilla_addEdgeColumn(QsciScintilla* self, int colnr, QColor* col);
void QsciScintilla_clearEdgeColumns(QsciScintilla* self);
void QsciScintilla_setEdgeColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setEdgeColumn(QsciScintilla* self, int colnr);
void QsciScintilla_setEdgeMode(QsciScintilla* self, int mode);
void QsciScintilla_setFirstVisibleLine(QsciScintilla* self, int linenr);
void QsciScintilla_setIndicatorDrawUnder(QsciScintilla* self, bool under);
void QsciScintilla_setIndicatorForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setIndicatorHoverForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setIndicatorHoverStyle(QsciScintilla* self, int style);
void QsciScintilla_setIndicatorOutlineColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMarginBackgroundColor(QsciScintilla* self, int margin, QColor* col);
void QsciScintilla_setMarginOptions(QsciScintilla* self, int options);
void QsciScintilla_setMarginText(QsciScintilla* self, int line, struct miqt_string text, int style);
void QsciScintilla_setMarginText2(QsciScintilla* self, int line, struct miqt_string text, QsciStyle* style);
void QsciScintilla_setMarginText3(QsciScintilla* self, int line, QsciStyledText* text);
void QsciScintilla_setMarginType(QsciScintilla* self, int margin, int type);
void QsciScintilla_clearMarginText(QsciScintilla* self);
void QsciScintilla_setMargins(QsciScintilla* self, int margins);
void QsciScintilla_setMarkerBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMarkerForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMatchedBraceBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMatchedBraceForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMatchedBraceIndicator(QsciScintilla* self, int indicatorNumber);
void QsciScintilla_resetMatchedBraceIndicator(QsciScintilla* self);
void QsciScintilla_setScrollWidth(QsciScintilla* self, int pixelWidth);
void QsciScintilla_setScrollWidthTracking(QsciScintilla* self, bool enabled);
void QsciScintilla_setTabDrawMode(QsciScintilla* self, int mode);
void QsciScintilla_setUnmatchedBraceBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setUnmatchedBraceForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setUnmatchedBraceIndicator(QsciScintilla* self, int indicatorNumber);
void QsciScintilla_resetUnmatchedBraceIndicator(QsciScintilla* self);
void QsciScintilla_setWrapVisualFlags(QsciScintilla* self, int endFlag);
struct miqt_string QsciScintilla_selectedText(const QsciScintilla* self);
bool QsciScintilla_selectionToEol(const QsciScintilla* self);
void QsciScintilla_setHotspotBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setHotspotForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setHotspotUnderline(QsciScintilla* self, bool enable);
void QsciScintilla_setHotspotWrap(QsciScintilla* self, bool enable);
void QsciScintilla_setSelectionToEol(QsciScintilla* self, bool filled);
void QsciScintilla_setExtraAscent(QsciScintilla* self, int extra);
void QsciScintilla_setExtraDescent(QsciScintilla* self, int extra);
void QsciScintilla_setOverwriteMode(QsciScintilla* self, bool overwrite);
void QsciScintilla_setWhitespaceBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setWhitespaceForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setWhitespaceSize(QsciScintilla* self, int size);
void QsciScintilla_setWrapIndentMode(QsciScintilla* self, int mode);
void QsciScintilla_showUserList(QsciScintilla* self, int id, struct miqt_array /* of struct miqt_string */  list);
QsciCommandSet* QsciScintilla_standardCommands(const QsciScintilla* self);
int QsciScintilla_tabDrawMode(const QsciScintilla* self);
bool QsciScintilla_tabIndents(const QsciScintilla* self);
int QsciScintilla_tabWidth(const QsciScintilla* self);
struct miqt_string QsciScintilla_text(const QsciScintilla* self);
struct miqt_string QsciScintilla_textWithLine(const QsciScintilla* self, int line);
struct miqt_string QsciScintilla_text2(const QsciScintilla* self, int start, int end);
int QsciScintilla_textHeight(const QsciScintilla* self, int linenr);
int QsciScintilla_whitespaceSize(const QsciScintilla* self);
int QsciScintilla_whitespaceVisibility(const QsciScintilla* self);
struct miqt_string QsciScintilla_wordAtLineIndex(const QsciScintilla* self, int line, int index);
struct miqt_string QsciScintilla_wordAtPoint(const QsciScintilla* self, QPoint* point);
const char* QsciScintilla_wordCharacters(const QsciScintilla* self);
int QsciScintilla_wrapMode(const QsciScintilla* self);
int QsciScintilla_wrapIndentMode(const QsciScintilla* self);
bool QsciScintilla_write(const QsciScintilla* self, QIODevice* io);
void QsciScintilla_append(QsciScintilla* self, struct miqt_string text);
void QsciScintilla_autoCompleteFromAll(QsciScintilla* self);
void QsciScintilla_autoCompleteFromAPIs(QsciScintilla* self);
void QsciScintilla_autoCompleteFromDocument(QsciScintilla* self);
void QsciScintilla_callTip(QsciScintilla* self);
void QsciScintilla_clear(QsciScintilla* self);
void QsciScintilla_copy(QsciScintilla* self);
void QsciScintilla_cut(QsciScintilla* self);
void QsciScintilla_ensureCursorVisible(QsciScintilla* self);
void QsciScintilla_ensureLineVisible(QsciScintilla* self, int line);
void QsciScintilla_foldAll(QsciScintilla* self, bool children);
void QsciScintilla_foldLine(QsciScintilla* self, int line);
void QsciScintilla_indent(QsciScintilla* self, int line);
void QsciScintilla_insert(QsciScintilla* self, struct miqt_string text);
void QsciScintilla_insertAt(QsciScintilla* self, struct miqt_string text, int line, int index);
void QsciScintilla_moveToMatchingBrace(QsciScintilla* self);
void QsciScintilla_paste(QsciScintilla* self);
void QsciScintilla_redo(QsciScintilla* self);
void QsciScintilla_removeSelectedText(QsciScintilla* self);
void QsciScintilla_replaceSelectedText(QsciScintilla* self, struct miqt_string text);
void QsciScintilla_resetSelectionBackgroundColor(QsciScintilla* self);
void QsciScintilla_resetSelectionForegroundColor(QsciScintilla* self);
void QsciScintilla_selectAll(QsciScintilla* self, bool select);
void QsciScintilla_selectToMatchingBrace(QsciScintilla* self);
void QsciScintilla_setAutoCompletionCaseSensitivity(QsciScintilla* self, bool cs);
void QsciScintilla_setAutoCompletionReplaceWord(QsciScintilla* self, bool replace);
void QsciScintilla_setAutoCompletionShowSingle(QsciScintilla* self, bool single);
void QsciScintilla_setAutoCompletionSource(QsciScintilla* self, int source);
void QsciScintilla_setAutoCompletionThreshold(QsciScintilla* self, int thresh);
void QsciScintilla_setAutoCompletionUseSingle(QsciScintilla* self, int single);
void QsciScintilla_setAutoIndent(QsciScintilla* self, bool autoindent);
void QsciScintilla_setBraceMatching(QsciScintilla* self, int bm);
void QsciScintilla_setBackspaceUnindents(QsciScintilla* self, bool unindent);
void QsciScintilla_setCaretForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setCaretLineBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setCaretLineFrameWidth(QsciScintilla* self, int width);
void QsciScintilla_setCaretLineVisible(QsciScintilla* self, bool enable);
void QsciScintilla_setCaretWidth(QsciScintilla* self, int width);
void QsciScintilla_setColor(QsciScintilla* self, QColor* c);
void QsciScintilla_setCursorPosition(QsciScintilla* self, int line, int index);
void QsciScintilla_setEolMode(QsciScintilla* self, int mode);
void QsciScintilla_setEolVisibility(QsciScintilla* self, bool visible);
void QsciScintilla_setFolding(QsciScintilla* self, int fold, int margin);
void QsciScintilla_setIndentation(QsciScintilla* self, int line, int indentation);
void QsciScintilla_setIndentationGuides(QsciScintilla* self, bool enable);
void QsciScintilla_setIndentationGuidesBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setIndentationGuidesForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setIndentationsUseTabs(QsciScintilla* self, bool tabs);
void QsciScintilla_setIndentationWidth(QsciScintilla* self, int width);
void QsciScintilla_setLexer(QsciScintilla* self, QsciLexer* lexer);
void QsciScintilla_setMarginsBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMarginsFont(QsciScintilla* self, QFont* f);
void QsciScintilla_setMarginsForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setMarginLineNumbers(QsciScintilla* self, int margin, bool lnrs);
void QsciScintilla_setMarginMarkerMask(QsciScintilla* self, int margin, int mask);
void QsciScintilla_setMarginSensitivity(QsciScintilla* self, int margin, bool sens);
void QsciScintilla_setMarginWidth(QsciScintilla* self, int margin, int width);
void QsciScintilla_setMarginWidth2(QsciScintilla* self, int margin, struct miqt_string s);
void QsciScintilla_setModified(QsciScintilla* self, bool m);
void QsciScintilla_setPaper(QsciScintilla* self, QColor* c);
void QsciScintilla_setReadOnly(QsciScintilla* self, bool ro);
void QsciScintilla_setSelection(QsciScintilla* self, int lineFrom, int indexFrom, int lineTo, int indexTo);
void QsciScintilla_setSelectionBackgroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setSelectionForegroundColor(QsciScintilla* self, QColor* col);
void QsciScintilla_setTabIndents(QsciScintilla* self, bool indent);
void QsciScintilla_setTabWidth(QsciScintilla* self, int width);
void QsciScintilla_setText(QsciScintilla* self, struct miqt_string text);
void QsciScintilla_setUtf8(QsciScintilla* self, bool cp);
void QsciScintilla_setWhitespaceVisibility(QsciScintilla* self, int mode);
void QsciScintilla_setWrapMode(QsciScintilla* self, int mode);
void QsciScintilla_undo(QsciScintilla* self);
void QsciScintilla_unindent(QsciScintilla* self, int line);
void QsciScintilla_zoomIn(QsciScintilla* self, int range);
void QsciScintilla_zoomIn2(QsciScintilla* self);
void QsciScintilla_zoomOut(QsciScintilla* self, int range);
void QsciScintilla_zoomOut2(QsciScintilla* self);
void QsciScintilla_zoomTo(QsciScintilla* self, int size);
void QsciScintilla_cursorPositionChanged(QsciScintilla* self, int line, int index);
void QsciScintilla_connect_cursorPositionChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_copyAvailable(QsciScintilla* self, bool yes);
void QsciScintilla_connect_copyAvailable(QsciScintilla* self, intptr_t slot);
void QsciScintilla_indicatorClicked(QsciScintilla* self, int line, int index, int state);
void QsciScintilla_connect_indicatorClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_indicatorReleased(QsciScintilla* self, int line, int index, int state);
void QsciScintilla_connect_indicatorReleased(QsciScintilla* self, intptr_t slot);
void QsciScintilla_linesChanged(QsciScintilla* self);
void QsciScintilla_connect_linesChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_marginClicked(QsciScintilla* self, int margin, int line, int state);
void QsciScintilla_connect_marginClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_marginRightClicked(QsciScintilla* self, int margin, int line, int state);
void QsciScintilla_connect_marginRightClicked(QsciScintilla* self, intptr_t slot);
void QsciScintilla_modificationAttempted(QsciScintilla* self);
void QsciScintilla_connect_modificationAttempted(QsciScintilla* self, intptr_t slot);
void QsciScintilla_modificationChanged(QsciScintilla* self, bool m);
void QsciScintilla_connect_modificationChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_selectionChanged(QsciScintilla* self);
void QsciScintilla_connect_selectionChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_textChanged(QsciScintilla* self);
void QsciScintilla_connect_textChanged(QsciScintilla* self, intptr_t slot);
void QsciScintilla_userListActivated(QsciScintilla* self, int id, struct miqt_string string);
void QsciScintilla_connect_userListActivated(QsciScintilla* self, intptr_t slot);
bool QsciScintilla_event(QsciScintilla* self, QEvent* e);
void QsciScintilla_changeEvent(QsciScintilla* self, QEvent* e);
void QsciScintilla_contextMenuEvent(QsciScintilla* self, QContextMenuEvent* e);
void QsciScintilla_wheelEvent(QsciScintilla* self, QWheelEvent* e);
struct miqt_string QsciScintilla_tr2(const char* s, const char* c);
struct miqt_string QsciScintilla_tr3(const char* s, const char* c, int n);
void QsciScintilla_clearAnnotations1(QsciScintilla* self, int line);
int QsciScintilla_indicatorDefine2(QsciScintilla* self, int style, int indicatorNumber);
int QsciScintilla_markerDefine2(QsciScintilla* self, int sym, int markerNumber);
int QsciScintilla_markerDefine22(QsciScintilla* self, char ch, int markerNumber);
int QsciScintilla_markerDefine23(QsciScintilla* self, QPixmap* pm, int markerNumber);
int QsciScintilla_markerDefine24(QsciScintilla* self, QImage* im, int markerNumber);
void QsciScintilla_markerDelete2(QsciScintilla* self, int linenr, int markerNumber);
void QsciScintilla_markerDeleteAll1(QsciScintilla* self, int markerNumber);
void QsciScintilla_setIndicatorDrawUnder2(QsciScintilla* self, bool under, int indicatorNumber);
void QsciScintilla_setIndicatorForegroundColor2(QsciScintilla* self, QColor* col, int indicatorNumber);
void QsciScintilla_setIndicatorHoverForegroundColor2(QsciScintilla* self, QColor* col, int indicatorNumber);
void QsciScintilla_setIndicatorHoverStyle2(QsciScintilla* self, int style, int indicatorNumber);
void QsciScintilla_setIndicatorOutlineColor2(QsciScintilla* self, QColor* col, int indicatorNumber);
void QsciScintilla_clearMarginText1(QsciScintilla* self, int line);
void QsciScintilla_setMarkerBackgroundColor2(QsciScintilla* self, QColor* col, int markerNumber);
void QsciScintilla_setMarkerForegroundColor2(QsciScintilla* self, QColor* col, int markerNumber);
void QsciScintilla_setWrapVisualFlags2(QsciScintilla* self, int endFlag, int startFlag);
void QsciScintilla_setWrapVisualFlags3(QsciScintilla* self, int endFlag, int startFlag, int indent);
QMetaObject* QsciScintilla_virtualbase_metaObject(const void* self);
void* QsciScintilla_virtualbase_metacast(void* self, const char* param1);
int QsciScintilla_virtualbase_metacall(void* self, int param1, int param2, void** param3);
struct miqt_array /* of struct miqt_string */  QsciScintilla_virtualbase_apiContext(void* self, int pos, int* context_start, int* last_word_start);
bool QsciScintilla_virtualbase_findFirst(void* self, struct miqt_string expr, bool re, bool cs, bool wo, bool wrap, bool forward, int line, int index, bool show, bool posix, bool cxx11);
bool QsciScintilla_virtualbase_findFirstInSelection(void* self, struct miqt_string expr, bool re, bool cs, bool wo, bool forward, bool show, bool posix, bool cxx11);
bool QsciScintilla_virtualbase_findNext(void* self);
void QsciScintilla_virtualbase_recolor(void* self, int start, int end);
void QsciScintilla_virtualbase_replace(void* self, struct miqt_string replaceStr);
void QsciScintilla_virtualbase_append(void* self, struct miqt_string text);
void QsciScintilla_virtualbase_autoCompleteFromAll(void* self);
void QsciScintilla_virtualbase_autoCompleteFromAPIs(void* self);
void QsciScintilla_virtualbase_autoCompleteFromDocument(void* self);
void QsciScintilla_virtualbase_callTip(void* self);
void QsciScintilla_virtualbase_clear(void* self);
void QsciScintilla_virtualbase_copy(void* self);
void QsciScintilla_virtualbase_cut(void* self);
void QsciScintilla_virtualbase_ensureCursorVisible(void* self);
void QsciScintilla_virtualbase_ensureLineVisible(void* self, int line);
void QsciScintilla_virtualbase_foldAll(void* self, bool children);
void QsciScintilla_virtualbase_foldLine(void* self, int line);
void QsciScintilla_virtualbase_indent(void* self, int line);
void QsciScintilla_virtualbase_insert(void* self, struct miqt_string text);
void QsciScintilla_virtualbase_insertAt(void* self, struct miqt_string text, int line, int index);
void QsciScintilla_virtualbase_moveToMatchingBrace(void* self);
void QsciScintilla_virtualbase_paste(void* self);
void QsciScintilla_virtualbase_redo(void* self);
void QsciScintilla_virtualbase_removeSelectedText(void* self);
void QsciScintilla_virtualbase_replaceSelectedText(void* self, struct miqt_string text);
void QsciScintilla_virtualbase_resetSelectionBackgroundColor(void* self);
void QsciScintilla_virtualbase_resetSelectionForegroundColor(void* self);
void QsciScintilla_virtualbase_selectAll(void* self, bool select);
void QsciScintilla_virtualbase_selectToMatchingBrace(void* self);
void QsciScintilla_virtualbase_setAutoCompletionCaseSensitivity(void* self, bool cs);
void QsciScintilla_virtualbase_setAutoCompletionReplaceWord(void* self, bool replace);
void QsciScintilla_virtualbase_setAutoCompletionShowSingle(void* self, bool single);
void QsciScintilla_virtualbase_setAutoCompletionSource(void* self, int source);
void QsciScintilla_virtualbase_setAutoCompletionThreshold(void* self, int thresh);
void QsciScintilla_virtualbase_setAutoCompletionUseSingle(void* self, int single);
void QsciScintilla_virtualbase_setAutoIndent(void* self, bool autoindent);
void QsciScintilla_virtualbase_setBraceMatching(void* self, int bm);
void QsciScintilla_virtualbase_setBackspaceUnindents(void* self, bool unindent);
void QsciScintilla_virtualbase_setCaretForegroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setCaretLineBackgroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setCaretLineFrameWidth(void* self, int width);
void QsciScintilla_virtualbase_setCaretLineVisible(void* self, bool enable);
void QsciScintilla_virtualbase_setCaretWidth(void* self, int width);
void QsciScintilla_virtualbase_setColor(void* self, QColor* c);
void QsciScintilla_virtualbase_setCursorPosition(void* self, int line, int index);
void QsciScintilla_virtualbase_setEolMode(void* self, int mode);
void QsciScintilla_virtualbase_setEolVisibility(void* self, bool visible);
void QsciScintilla_virtualbase_setFolding(void* self, int fold, int margin);
void QsciScintilla_virtualbase_setIndentation(void* self, int line, int indentation);
void QsciScintilla_virtualbase_setIndentationGuides(void* self, bool enable);
void QsciScintilla_virtualbase_setIndentationGuidesBackgroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setIndentationGuidesForegroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setIndentationsUseTabs(void* self, bool tabs);
void QsciScintilla_virtualbase_setIndentationWidth(void* self, int width);
void QsciScintilla_virtualbase_setLexer(void* self, QsciLexer* lexer);
void QsciScintilla_virtualbase_setMarginsBackgroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setMarginsFont(void* self, QFont* f);
void QsciScintilla_virtualbase_setMarginsForegroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setMarginLineNumbers(void* self, int margin, bool lnrs);
void QsciScintilla_virtualbase_setMarginMarkerMask(void* self, int margin, int mask);
void QsciScintilla_virtualbase_setMarginSensitivity(void* self, int margin, bool sens);
void QsciScintilla_virtualbase_setMarginWidth(void* self, int margin, int width);
void QsciScintilla_virtualbase_setMarginWidth2(void* self, int margin, struct miqt_string s);
void QsciScintilla_virtualbase_setModified(void* self, bool m);
void QsciScintilla_virtualbase_setPaper(void* self, QColor* c);
void QsciScintilla_virtualbase_setReadOnly(void* self, bool ro);
void QsciScintilla_virtualbase_setSelection(void* self, int lineFrom, int indexFrom, int lineTo, int indexTo);
void QsciScintilla_virtualbase_setSelectionBackgroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setSelectionForegroundColor(void* self, QColor* col);
void QsciScintilla_virtualbase_setTabIndents(void* self, bool indent);
void QsciScintilla_virtualbase_setTabWidth(void* self, int width);
void QsciScintilla_virtualbase_setText(void* self, struct miqt_string text);
void QsciScintilla_virtualbase_setUtf8(void* self, bool cp);
void QsciScintilla_virtualbase_setWhitespaceVisibility(void* self, int mode);
void QsciScintilla_virtualbase_setWrapMode(void* self, int mode);
void QsciScintilla_virtualbase_undo(void* self);
void QsciScintilla_virtualbase_unindent(void* self, int line);
void QsciScintilla_virtualbase_zoomIn(void* self, int range);
void QsciScintilla_virtualbase_zoomIn2(void* self);
void QsciScintilla_virtualbase_zoomOut(void* self, int range);
void QsciScintilla_virtualbase_zoomOut2(void* self);
void QsciScintilla_virtualbase_zoomTo(void* self, int size);
bool QsciScintilla_virtualbase_event(void* self, QEvent* e);
void QsciScintilla_virtualbase_changeEvent(void* self, QEvent* e);
void QsciScintilla_virtualbase_contextMenuEvent(void* self, QContextMenuEvent* e);
void QsciScintilla_virtualbase_wheelEvent(void* self, QWheelEvent* e);
bool QsciScintilla_virtualbase_canInsertFromMimeData(const void* self, QMimeData* source);
struct miqt_string QsciScintilla_virtualbase_fromMimeData(const void* self, QMimeData* source, bool* rectangular);
QMimeData* QsciScintilla_virtualbase_toMimeData(const void* self, struct miqt_string text, bool rectangular);
void QsciScintilla_virtualbase_dragEnterEvent(void* self, QDragEnterEvent* e);
void QsciScintilla_virtualbase_dragLeaveEvent(void* self, QDragLeaveEvent* e);
void QsciScintilla_virtualbase_dragMoveEvent(void* self, QDragMoveEvent* e);
void QsciScintilla_virtualbase_dropEvent(void* self, QDropEvent* e);
void QsciScintilla_virtualbase_focusInEvent(void* self, QFocusEvent* e);
void QsciScintilla_virtualbase_focusOutEvent(void* self, QFocusEvent* e);
bool QsciScintilla_virtualbase_focusNextPrevChild(void* self, bool next);
void QsciScintilla_virtualbase_keyPressEvent(void* self, QKeyEvent* e);
void QsciScintilla_virtualbase_inputMethodEvent(void* self, QInputMethodEvent* event);
QVariant* QsciScintilla_virtualbase_inputMethodQuery(const void* self, int query);
void QsciScintilla_virtualbase_mouseDoubleClickEvent(void* self, QMouseEvent* e);
void QsciScintilla_virtualbase_mouseMoveEvent(void* self, QMouseEvent* e);
void QsciScintilla_virtualbase_mousePressEvent(void* self, QMouseEvent* e);
void QsciScintilla_virtualbase_mouseReleaseEvent(void* self, QMouseEvent* e);
void QsciScintilla_virtualbase_paintEvent(void* self, QPaintEvent* e);
void QsciScintilla_virtualbase_resizeEvent(void* self, QResizeEvent* e);
void QsciScintilla_virtualbase_scrollContentsBy(void* self, int dx, int dy);
QSize* QsciScintilla_virtualbase_minimumSizeHint(const void* self);
QSize* QsciScintilla_virtualbase_sizeHint(const void* self);
void QsciScintilla_virtualbase_setupViewport(void* self, QWidget* viewport);
bool QsciScintilla_virtualbase_eventFilter(void* self, QObject* param1, QEvent* param2);
bool QsciScintilla_virtualbase_viewportEvent(void* self, QEvent* param1);
QSize* QsciScintilla_virtualbase_viewportSizeHint(const void* self);
void QsciScintilla_virtualbase_initStyleOption(const void* self, QStyleOptionFrame* option);
int QsciScintilla_virtualbase_devType(const void* self);
void QsciScintilla_virtualbase_setVisible(void* self, bool visible);
int QsciScintilla_virtualbase_heightForWidth(const void* self, int param1);
bool QsciScintilla_virtualbase_hasHeightForWidth(const void* self);
QPaintEngine* QsciScintilla_virtualbase_paintEngine(const void* self);
void QsciScintilla_virtualbase_keyReleaseEvent(void* self, QKeyEvent* event);
void QsciScintilla_virtualbase_enterEvent(void* self, QEnterEvent* event);
void QsciScintilla_virtualbase_leaveEvent(void* self, QEvent* event);
void QsciScintilla_virtualbase_moveEvent(void* self, QMoveEvent* event);
void QsciScintilla_virtualbase_closeEvent(void* self, QCloseEvent* event);
void QsciScintilla_virtualbase_tabletEvent(void* self, QTabletEvent* event);
void QsciScintilla_virtualbase_actionEvent(void* self, QActionEvent* event);
void QsciScintilla_virtualbase_showEvent(void* self, QShowEvent* event);
void QsciScintilla_virtualbase_hideEvent(void* self, QHideEvent* event);
bool QsciScintilla_virtualbase_nativeEvent(void* self, struct miqt_string eventType, void* message, intptr_t* result);
int QsciScintilla_virtualbase_metric(const void* self, int param1);
void QsciScintilla_virtualbase_initPainter(const void* self, QPainter* painter);
QPaintDevice* QsciScintilla_virtualbase_redirected(const void* self, QPoint* offset);
QPainter* QsciScintilla_virtualbase_sharedPainter(const void* self);
void QsciScintilla_virtualbase_timerEvent(void* self, QTimerEvent* event);
void QsciScintilla_virtualbase_childEvent(void* self, QChildEvent* event);
void QsciScintilla_virtualbase_customEvent(void* self, QEvent* event);
void QsciScintilla_virtualbase_connectNotify(void* self, QMetaMethod* signal);
void QsciScintilla_virtualbase_disconnectNotify(void* self, QMetaMethod* signal);
const QMetaObject* QsciScintilla_staticMetaObject();
void QsciScintilla_delete(QsciScintilla* self);

#ifdef __cplusplus
} /* extern C */
#endif

#endif
